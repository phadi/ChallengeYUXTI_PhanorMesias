{"version":3,"sources":["components/NavMenu.js","components/Layout.js","components/Home.js","components/Sercher/SearchVideos.js","components/Sercher/SearchImages.js","components/Sercher/BingSercher.js","components/Locations/LocationList.js","App.js","registerServiceWorker.js","index.js"],"names":["NavMenu","props","toggleNavbar","bind","state","collapsed","this","setState","Navbar","className","light","Container","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","isOpen","navbar","NavItem","NavLink","Component","displayName","name","Layout","children","Home","href","target","SearchVideos","tableResult","buscaElemento","busquedaOri","contents","renderSearchResult","query","a","console","log","searchResult","map","contentUrl","description","webSearchUrl","SearchImages","src","width","height","BingSercher","busqueda","loading","tableResultVideo","tableResultImage","opcionBusqueda","onChangeValue","onChangeType","type","value","placeholder","onChange","event","elementoBusqueda","cambio","fetch","response","json","data","webPages","undefined","videos","images","resultVideo","resultImage","url","id","LocationList","locationList","locationListTotal","externaldata","externaldataCsv","externaldataDb","externaldataGen","locationOption","busquedaFinal","busquedaInicial","filterAviability","filterAviabilityFinal","populateExternalData","renderForecastsTable","checked","responseCsv","dataCsv","responseDb","dataDb","responseGen","dataGen","filtro","filter","elemento","InitialAvailability","FinalAvailability","Id","Name","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","basename","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.0c552983.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavMenu.css';\r\n\r\nexport class NavMenu extends Component {\r\n  static displayName = NavMenu.name;\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed: true\r\n    };\r\n  }\r\n\r\n  toggleNavbar () {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <header>\r\n        <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\r\n          <Container>\r\n            <NavbarBrand tag={Link} to=\"/\">Challenge YUXI</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\r\n              <ul className=\"navbar-nav flex-grow\">\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/\">Home</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/locationlist\">Ubicaciones</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/sercher\">Buscador</NavLink>\r\n                </NavItem>\r\n              </ul>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <NavMenu />\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Home extends Component {\r\n  static displayName = Home.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <h1>PHANOR MESIAS</h1>\r\n        <p>FullStack Developer</p>\r\n        <p>Prueba tecnica para YUXI como full stack developer. EL reto consiste en una aplicacion para fron y una para back:</p>\r\n        <ul>\r\n            <li>El Back es una aplicacion web de .NET core 3.1\r\n                <p>Se encuentra publicada en Azure: <a href='https://challengeyuxtibackpm.azurewebsites.net/locations' target='_blank'>https://challengeyuxtibackpm.azurewebsites.net</a></p>\r\n            </li>\r\n            <li>EL front esta desarrollado con pla plantilla de .Net para React.\r\n                    <p>Se encuentra publicada en Azure: <a href='https://challengeyuxtifrontpm.azurewebsites.net' target='_blank'>https://challengeyuxtifrontpm.azurewebsites.net</a></p>\r\n            </li>\r\n        </ul>        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, useEffect, useState } from 'react';\r\n\r\nexport class SearchVideos extends Component {\r\n    static displayName = SearchVideos.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tableResult: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.buscaElemento(this.props.busquedaOri);\r\n    }\r\n\r\n    static renderSearchResult(searchResult) {\r\n        return (\r\n            <table className='table table-striped' aria-labelledby=\"locationTable\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Text</th>\r\n                        <th>Descripcion</th>\r\n                        <th>URL</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {searchResult.map(searchResult =>\r\n                        <tr key={searchResult.webSearchUrl}>\r\n                            <td><a href={searchResult.contentUrl} target=\"_blank\"> {searchResult.name}</a></td>\r\n                            <td><a href={searchResult.contentUrl} target=\"_blank\"> {searchResult.description}</a></td>\r\n                            <td><a href={searchResult.contentUrl} target=\"_blank\"> {searchResult.contentUrl}</a></td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let contents = SearchVideos.renderSearchResult(this.state.tableResult);\r\n        return (\r\n            <div>\r\n                <h3>BUSQUEDA POR VIDEOS</h3>\r\n                {contents}\r\n            </div>\r\n        );        \r\n    }\r\n\r\n    async buscaElemento(query) {\r\n        console.log(\"VIDEOS...\" + query);\r\n        this.setState({ tableResult: query });\r\n    }\r\n}","import React, { Component, useEffect, useState } from 'react';\r\n\r\nexport class SearchImages extends Component {\r\n    static displayName = SearchImages.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tableResult: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.buscaElemento(this.props.busquedaOri);\r\n    }\r\n\r\n    static renderSearchResult(searchResult) {\r\n        return (\r\n            <table className='table table-striped' aria-labelledby=\"locationTable\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Image</th>\r\n                        <th>Name</th>\r\n                        <th>URL</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {searchResult.map(searchResult =>\r\n                        <tr key={searchResult.webSearchUrl}>\r\n                            <td><a href={searchResult.contentUrl} target=\"_blank\"> <img src={searchResult.contentUrl} width=\"30\" height=\"30\" /></a></td>\r\n                            <td><a href={searchResult.contentUrl} target=\"_blank\"> {searchResult.name}</a></td>\r\n                            <td><a href={searchResult.contentUrl} target=\"_blank\"> {searchResult.contentUrl}</a></td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let contents = SearchImages.renderSearchResult(this.state.tableResult);\r\n        return (\r\n            <div>\r\n                <h3>BUSQUEDA POR IMAGENES</h3>\r\n                {contents}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    async buscaElemento(query) {\r\n        console.log(\"IMAGENES...\" + query);\r\n        this.setState({ tableResult: query });\r\n    }\r\n}","import React, { Component, useEffect, useState } from 'react';\r\nimport { SearchVideos } from './SearchVideos';\r\nimport { SearchImages } from './SearchImages';\r\n\r\nexport class BingSercher extends Component {\r\n    static displayName = BingSercher.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            busqueda: \"\",\r\n            loading: true,\r\n            searchResult: [],\r\n            tableResult: [],\r\n            tableResultVideo: [],\r\n            tableResultImage: [],\r\n            opcionBusqueda: \"WebPages\"\r\n        };\r\n        this.onChangeValue = this.onChangeValue.bind(this);\r\n        this.buscaElemento = this.buscaElemento.bind(this);\r\n        this.onChangeType = this.onChangeType.bind(this);\r\n    }\r\n\r\n    static renderSearchResult(searchResult, resultVideo, resultImage, opcionBusqueda) {\r\n        return (\r\n            \r\n            <div>\r\n                <div className={opcionBusqueda === 'WebPages' ? \"div-inline\" : \"div-none\"}>\r\n                    <h3>BUSQUEDA POR WEBSITES</h3>\r\n                    <table className='table table-striped' aria-labelledby=\"locationTable\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Text</th>\r\n                                <th>URL</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {searchResult.map(searchResult =>\r\n                                <tr key={searchResult.id}>\r\n                                    <td><a href={searchResult.url} target=\"_blank\"> {searchResult.name}</a></td>\r\n                                    <td><a href={searchResult.url} target=\"_blank\"> {searchResult.url}</a></td>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>                \r\n                <div className={opcionBusqueda === 'Videos' ? \"div-inline\" : \"div-none\"}>\r\n                    <h3>BUSQUEDA POR VIDEOS</h3>\r\n                    <table className='table table-striped' aria-labelledby=\"locationTable\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Text</th>\r\n                                <th>Descripcion</th>\r\n                                <th>URL</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {resultVideo.map(searchResult =>\r\n                                <tr key={searchResult.webSearchUrl}>\r\n                                    <td><a href={searchResult.contentUrl} target=\"_blank\"> {searchResult.name}</a></td>\r\n                                    <td><a href={searchResult.contentUrl} target=\"_blank\"> {searchResult.description}</a></td>\r\n                                    <td><a href={searchResult.contentUrl} target=\"_blank\"> {searchResult.contentUrl}</a></td>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </div> \r\n                <div className={opcionBusqueda === 'Imagenes' ? \"div-inline\" : \"div-none\"}>\r\n                    <h3>BUSQUEDA POR IMAGENES</h3>\r\n                    <table className='table table-striped' aria-labelledby=\"locationTable\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Image</th>\r\n                                <th>Name</th>\r\n                                <th>URL</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {resultImage.map(searchResult =>\r\n                                <tr key={searchResult.webSearchUrl}>\r\n                                    <td><a href={searchResult.contentUrl} target=\"_blank\"> <img src={searchResult.contentUrl} width=\"60\" height=\"60\" /></a></td>\r\n                                    <td><a href={searchResult.contentUrl} target=\"_blank\"> {searchResult.name}</a></td>\r\n                                    <td><a href={searchResult.contentUrl} target=\"_blank\"> {searchResult.contentUrl}</a></td>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div> \r\n        );\r\n    }\r\n\r\n    render() {\r\n        let contents = this.state.loading\r\n            ? <p><em>Searching...</em></p>\r\n            : BingSercher.renderSearchResult(this.state.tableResult, this.state.tableResultVideo, this.state.tableResultImage, this.state.opcionBusqueda);\r\n        return (\r\n            <div className=\"App\">\r\n                <div>\r\n                    <input type=\"submit\"\r\n                        className={this.state.opcionBusqueda === 'WebPages' ? \"btn btn-selected\" : \"btn btn-primary\"} \r\n                        value=\"WebPages\"\r\n                        onClick={this.onChangeType}\r\n                    />&nbsp;&nbsp;\r\n                    <input type=\"submit\"\r\n                        className={this.state.opcionBusqueda === 'Videos' ? \"btn btn-selected\" : \"btn btn-primary\"} \r\n                        value=\"Videos\"\r\n                        onClick={this.onChangeType}\r\n                    />&nbsp;&nbsp;\r\n                    <input type=\"submit\"\r\n                        className={this.state.opcionBusqueda === 'Imagenes' ? \"btn btn-selected\" : \"btn btn-primary\"} \r\n                        value=\"Imagenes\"\r\n                        onClick={this.onChangeType}\r\n                    />\r\n                </div>\r\n                <br />\r\n                <div className=\"containerInput\">\r\n                    <input type=\"text\"\r\n                        className=\"form-control inputBuscar\"\r\n                        placeholder=\"Elemento de busqueda\"\r\n                        onChange={this.onChangeValue}\r\n                        value={this.state.busqueda} />\r\n                    <input type=\"submit\"\r\n                        className=\"btn btn-success\"\r\n                        value=\"Buscar\"\r\n                        onClick={this.buscaElemento}\r\n                    />\r\n                </div>\r\n                <div>                    \r\n                    {contents}\r\n                </div>                \r\n            </div>            \r\n        );\r\n    }\r\n\r\n    onChangeValue(event) {\r\n        var elementoBusqueda = event.target.value;\r\n        this.setState({ busqueda: elementoBusqueda });\r\n        if (elementoBusqueda === \"\") {\r\n            this.setState({ searchResult: [], tableResult: [], tableResultVideo: [], tableResultImage: [], loading: true });\r\n        }\r\n    }\r\n\r\n    onChangeType(event) {\r\n        var cambio = event.target.value;\r\n        this.setState({ opcionBusqueda: cambio});\r\n        console.log(this.state.opcionBusqueda);\r\n    }\r\n\r\n    async buscaElemento() {\r\n        console.log(this.state.busqueda);\r\n\r\n        if (this.state.busqueda != \"\") {\r\n\r\n            const response = await fetch('search/' + this.state.busqueda);\r\n            const data = await response.json();\r\n            this.setState({ searchResult: data, loading: false });\r\n\r\n            if (data.webPages === \"\" || data.webPages === undefined || data.webPages === null) {\r\n                this.setState({ tableResult: [] });\r\n            } else {\r\n                this.setState({ tableResult: data.webPages.value });\r\n            }\r\n\r\n            if (data.videos === \"\" || data.videos === undefined || data.videos === null) {\r\n                this.setState({ tableResultVideo: [] });\r\n            } else {\r\n                this.setState({ tableResultVideo: data.videos.value });\r\n            }\r\n\r\n            if (data.images === \"\" || data.images === undefined || data.images === null) {\r\n                this.setState({ tableResultImage: [] });\r\n            } else {\r\n                this.setState({ tableResultImage: data.images.value });\r\n            }\r\n\r\n            //<SearchVideos busquedaOri={resultVideo} />\r\n            //<SearchImages busquedaOri={resultImage} />\r\n            \r\n            console.log(\"final \" + data);\r\n\r\n\r\n            //const { ImageSearchClient } = require(\"@azure/cognitiveservices-imagesearch\");\r\n            //const { CognitiveServicesCredentials } = require(\"@azure/ms-rest-azure-js\");\r\n\r\n            //const imageSearchKey = \"4e4e7732aa244790919c375d66dcb2cc\";\r\n            //const imageSearchEndPoint = \"https://bingserviceyuxiphadi.cognitiveservices.azure.com/\";\r\n            //    //\"https://api.bing.microsoft.com/\";\r\n            //const cognitiveServiceCredentials = new CognitiveServicesCredentials(imageSearchKey);\r\n\r\n            ////https://bingwebsearchpm.cognitiveservices.azure.com/bing/v7.0/images/search?color=Monochrome&count=10&imageType=Photo&q=azure&safeSearch=Strict\r\n\r\n            //const client = new ImageSearchClient(cognitiveServiceCredentials, {\r\n            //    endpoint: imageSearchEndPoint\r\n            //});\r\n\r\n            //const query = this.state.busqueda;\r\n            //const options = {\r\n            //    color: \"Monochrome\",\r\n            //    count: 10,\r\n            //    imageType: \"Photo\",\r\n            //    safeSearch: \"Strict\"\r\n            //};\r\n\r\n            //client.images\r\n            //    .search(query, options)\r\n            //    .then(result => {\r\n            //        console.log(\"The result is: \");\r\n            //        console.log(result);\r\n            //    })\r\n            //    .catch(err => {\r\n            //        console.log(\"An error occurred:\");\r\n            //        console.error(err);\r\n            //    });\r\n        } else {\r\n            this.setState({ searchResult: [], tableResult: [], loading: true });\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\n\r\nexport class LocationList extends Component {\r\n    static displayName = LocationList.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            locationList: [],\r\n            locationListTotal: [],\r\n            externaldata: [],\r\n            externaldataCsv: [],\r\n            externaldataDb: [],\r\n            externaldataGen: [],\r\n            loading: true,\r\n            locationOption: \"\",\r\n            busquedaFinal: \"\",\r\n            busquedaInicial: \"\"            \r\n        };\r\n        this.onChangeValue = this.onChangeValue.bind(this);\r\n        this.filterAviability = this.filterAviability.bind(this);\r\n        this.filterAviabilityFinal = this.filterAviabilityFinal.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ locationOption: 'csv' });\r\n        this.populateExternalData();\r\n    }\r\n\r\n    static renderForecastsTable(externaldata) {\r\n        return (\r\n            <table className='table table-striped' aria-labelledby=\"locationTable\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Id</th>\r\n                        <th>Nombre</th>\r\n                        <th>Disponible desde</th>\r\n                        <th>Disponible hasta</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {externaldata.map(externaldata =>\r\n                        <tr key={externaldata.Id}>\r\n                            <td>{externaldata.Id}</td>\r\n                            <td>{externaldata.Name}</td>\r\n                            <td>{externaldata.InitialAvailability}</td>\r\n                            <td>{externaldata.FinalAvailability}</td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let contents = this.state.loading\r\n            ? <p><em>Loading...</em></p>\r\n            : LocationList.renderForecastsTable(this.state.locationList);\r\n\r\n        return (\r\n            <div>\r\n                <h1 id=\"locationTable\">Disponibilidad de Ubicaciones</h1>\r\n                <div>\r\n                    <input type=\"radio\" value=\"generic\" onChange={this.onChangeValue} checked={this.state.locationOption === 'generic'} name=\"generic\" /> Generic <span></span> <br/>\r\n                    <input type=\"radio\" value=\"csv\" onChange={this.onChangeValue} checked={this.state.locationOption === 'csv'} name=\"csv\" /> .CSV <span></span> <br />\r\n                    <input type=\"radio\" value=\"db\" onChange={this.onChangeValue} checked={this.state.locationOption === 'db'} name=\"db\" /> Database <span></span> <br />\r\n                    <br />\r\n                    \r\n                    <label>\r\n                        Filtro disponibilidad Inicial:\r\n                        <input type=\"text\"\r\n                            className=\"form-control inputBuscar\"\r\n                            placeholder=\"Disponibilidad Inicial\"\r\n                            value={this.state.busquedaInicial}\r\n                            onChange={this.filterAviability} />\r\n                    </label>\r\n                    <label>\r\n                        Filtro disponibilidad Final:\r\n                        <input type=\"text\"\r\n                            className=\"form-control inputBuscar\"\r\n                            placeholder=\"Disponibilidad Final\"\r\n                            value={this.state.busquedaFinal}\r\n                            onChange={this.filterAviabilityFinal}/>\r\n                    </label>\r\n                </div>\r\n                <br />\r\n                <p>Lista de Ubicaciones por disonibilidad</p>\r\n                {contents}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onChangeValue(event) {\r\n        this.setState({ locationOption: event.target.value });\r\n\r\n        switch (event.target.value) {\r\n            case 'csv':\r\n                this.setState({ locationList: this.state.externaldataCsv.locationList, locationListTotal: this.state.externaldataCsv.locationList, externaldata: this.state.externaldataCsv, loading: false });\r\n                break;\r\n            case 'db':\r\n                this.setState({ locationList: this.state.externaldataDb.locationList, locationListTotal: this.state.externaldataDb.locationList, externaldata: this.state.externaldataDb, loading: false });\r\n                break;\r\n            case 'generic':\r\n                this.setState({ locationList: this.state.externaldataGen.locationList, locationListTotal: this.state.externaldataGen.locationList, externaldata: this.state.externaldataGen, loading: false });\r\n                break;\r\n            default:\r\n                this.setState({ locationList: this.state.externaldataCsv.locationList, locationListTotal: this.state.externaldataCsv.locationList, externaldata: this.state.externaldataCsv, loading: false });\r\n                break;\r\n        }        \r\n    }\r\n\r\n    async populateExternalData() {\r\n        const responseCsv = await fetch('https://challengeyuxtibackpm.azurewebsites.net/locations/csv');\r\n        const dataCsv = await responseCsv.json();;\r\n        \r\n        const responseDb = await fetch('https://challengeyuxtibackpm.azurewebsites.net/locations/db');\r\n        const dataDb = await responseDb.json();\r\n\r\n        const responseGen = await fetch('https://challengeyuxtibackpm.azurewebsites.net/locations/generic');\r\n        const dataGen = await responseGen.json();\r\n\r\n        this.setState({ locationList: dataCsv.locationList, locationListTotal: dataCsv.locationList, externaldata: dataCsv, externaldataCsv: dataCsv, externaldataDb: dataDb, externaldataGen: dataGen, loading: false });\r\n    }\r\n\r\n    filterAviability(event) {\r\n        \r\n        var elementoBusqueda = event.target.value;\r\n        var filtro = this.state.locationListTotal.filter((elemento) => {\r\n            if (elemento.InitialAvailability >= elementoBusqueda) {\r\n                return elemento;\r\n            }\r\n        });\r\n\r\n        this.setState({ locationList: filtro, busquedaInicial: elementoBusqueda, busquedaFinal: \"\" });\r\n    }\r\n\r\n    filterAviabilityFinal(event) {\r\n\r\n        var elementoBusqueda = event.target.value;\r\n        var filtro = [];\r\n        if (this.state.busquedaInicial === \"\") {\r\n            if (elementoBusqueda === \"\") {\r\n                filtro = this.state.locationListTotal;\r\n            } else {\r\n                filtro = this.state.locationListTotal.filter((elemento) => {\r\n                    if (elemento.FinalAvailability <= elementoBusqueda) {\r\n                        return elemento;\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            if (elementoBusqueda === \"\") {                \r\n                filtro = this.state.locationListTotal.filter((elemento) => {\r\n                    if (elemento.InitialAvailability >= this.state.busquedaInicial) {\r\n                        return elemento;\r\n                    }\r\n                });\r\n            } else {\r\n                filtro = this.state.locationListTotal.filter((elemento) => {\r\n                    if (elemento.InitialAvailability >= this.state.busquedaInicial\r\n                        && elemento.FinalAvailability <= elementoBusqueda) {\r\n                        return elemento;\r\n                    }\r\n                });\r\n            }            \r\n        }\r\n       \r\n        this.setState({ locationList: filtro, busquedaFinal: elementoBusqueda });\r\n    }\r\n} ","import React, { Component, useEffect, useState  } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Layout } from './components/Layout';\r\nimport { Home } from './components/Home';\r\nimport { BingSercher } from './components/Sercher/BingSercher';\r\nimport { LocationList } from './components/Locations/LocationList';\r\nimport axios from \"axios\";\r\n\r\nimport './custom.css'\r\n\r\nexport default class App extends Component {\r\n    static displayName = App.name;\r\n\r\n    \r\n\r\n  render () {\r\n    return (\r\n      <Layout>\r\n        <Route exact path='/' component={Home} />\r\n        <Route path='/locationlist' component={LocationList} />\r\n        <Route path='/sercher' component={BingSercher} />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}